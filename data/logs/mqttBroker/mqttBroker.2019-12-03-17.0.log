2019-12-03 18:00:19.227 [worker-5-1] c.z.m.s.impl.SessionServiceImpl:47   DEBUG - putSessionByClient,clientId:jimmy172320146,sessionModel:{"brokerId":2,"clientId":"jimmy172320146","channelId":"acde48fffe001122-00000718-00000001-14c0b7867afc148b-7c14df10","cleanSession":true,"willMessage":null},mexpire:{}
2019-12-03 18:00:19.273 [worker-5-1] c.z.m.p.MqttServerConnectProcess:146  DEBUG - CONNECT - clientId: jimmy172320146, connectMsg: MqttConnectMessage[fixedHeader=MqttFixedHeader[messageType=CONNECT, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=26], variableHeader=MqttConnectVariableHeader[name=MQTT, version=4, hasUserName=false, hasPassword=false, isWillRetain=false, isWillFlag=false, isCleanSession=true, keepAliveTimeSeconds=60], payload=MqttConnectPayload[clientIdentifier=jimmy172320146, willTopic=null, willMessage=null, userName=null, password=null]],connectAckMsg:MqttConnAckMessage[fixedHeader=MqttFixedHeader[messageType=CONNACK, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=MqttConnAckVariableHeader[connectReturnCode=CONNECTION_ACCEPTED, sessionPresent=false], payload=]
2019-12-03 18:00:26.742 [worker-5-1] c.z.m.p.MqttServerSubscribeProcess:58   DEBUG - subscribe - clientId: jimmy172320146,msg:MqttSubscribeMessage[fixedHeader=MqttFixedHeader[messageType=SUBSCRIBE, isDup=false, qosLevel=AT_LEAST_ONCE, isRetain=false, remainingLength=9], variableHeader=MqttMessageIdVariableHeader[messageId=1], payload=MqttSubscribePayload[MqttTopicSubscription[topicFilter=8070, qualityOfService=AT_MOST_ONCE]]]
2019-12-03 18:00:26.819 [worker-5-1] c.z.m.p.MqttServerSubscribeProcess:70   DEBUG - SUBSCRIBE - clientId: jimmy172320146, topFilter: 8070, QoS: 0
2019-12-03 18:00:26.859 [worker-5-1] c.z.m.server.MqttServerHandler:88   ERROR - mqtt broker has a cause:{}
java.lang.NullPointerException: null
	at com.zwj.mqtt.protocol.MqttServerSubscribeProcess.lambda$subscribe$0(MqttServerSubscribeProcess.java:72)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	at com.zwj.mqtt.protocol.MqttServerSubscribeProcess.subscribe(MqttServerSubscribeProcess.java:65)
	at com.zwj.mqtt.protocol.MqttServerSubscribeProcess.process(MqttServerSubscribeProcess.java:50)
	at com.zwj.mqtt.config.MqttServerProtocolProcessor.process(MqttServerProtocolProcessor.java:40)
	at com.zwj.mqtt.server.MqttServerHandler.channelRead0(MqttServerHandler.java:83)
	at com.zwj.mqtt.server.MqttServerHandler.channelRead0(MqttServerHandler.java:36)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:648)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:583)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:500)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:462)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
